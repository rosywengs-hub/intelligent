generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String
  role        Role
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  institution Institution? @relation(fields: [institutionId], references: [id])
  institutionId Int?
  lessons     Lesson[]
  assessments Assessment[]
  schedules   Schedule[]
}
model Institution {
  id        Int      @id @default(autoincrement())
  name      String
  users     User[]
  courses   Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
model Course {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  examType     String
  lessons      Lesson[]
  assessments  Assessment[]
  institution  Institution? @relation(fields: [institutionId], references: [id])
  institutionId Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}
model Lesson {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
model Assessment {
  id        Int      @id @default(autoincrement())
  title     String
  type      String
  questions Json
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  course    Course?  @relation(fields: [courseId], references: [id])
  courseId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
model Schedule {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  freeTime  String
  sessions  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
model Report {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  content   Json
  createdAt DateTime @default(now())
}
enum Role {
  LEARNER
  INSTRUCTOR
  ADMIN
  SUPERADMIN
}